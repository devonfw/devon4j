# Kafka common properties
messaging.kafka.common.bootstrapServers=localhost:9092
#messaging.kafka.common.metadataMaxAgeMs=
#messaging.kafka.common.sendBufferBytes=
#messaging.kafka.common.receiveBufferBytes=
messaging.kafka.common.clientId=
#messaging.kafka.common.reconnectBackoffMs=
#messaging.kafka.common.reconnectBackoffMaxMs=
#messaging.kafka.common.retryBackoffMs=
#messaging.kafka.common.metricsSampleWindowMs=
#messaging.kafka.common.metricsNumSamples=
#messaging.kafka.common.metricsRecordingLevel=
#messaging.kafka.common.metricReporters=
#messaging.kafka.common.securityProtocol=
#messaging.kafka.common.sslKeystoreLocation=
#messaging.kafka.common.sslKeystorePassword=
#messaging.kafka.common.sslKeyPassword=
#messaging.kafka.common.sslTruststoreLocation=
#messaging.kafka.common.sslTruststorePassword=
#messaging.kafka.common.saslMechanism=
#messaging.kafka.common.username=
#messaging.kafka.common.password=
#messaging.kafka.common.connectionsMaxIdleMs=
#messaging.kafka.common.requestTimeoutMs=

# kafka health indicator properties
#management.endpoint.health.enabled=
#messaging.kafka.health.timeout=
#messaging.kafka.health.topicsToCheck=

# Kafka producer properties
#messaging.kafka.producer.batchSize=
#messaging.kafka.producer.acks=
#messaging.kafka.producer.lingerMs=
#messaging.kafka.producer.maxRequestSize=
#messaging.kafka.producer.maxBlockMs=
#messaging.kafka.producer.bufferMemory=
#messaging.kafka.producer.compressionType=
#messaging.kafka.producer.maxInFlightRequestsPerConnection=
#messaging.kafka.producer.retries=
#messaging.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
#messaging.kafka.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
#messaging.kafka.producer.partitionerClass=
#messaging.kafka.producer.interceptorClasses=
#messaging.kafka.producer.enableIdempotence=
#messaging.kafka.producer.transactionTimeoutMs=
#messaging.kafka.producer.transactionalId=

# Message sender properties
#messaging.sender.defaultSendTimeoutSeconds=

# Kafka consumer properties
messaging.kafka.consumer.groupId=test-group
#messaging.kafka.consumer.maxPollRecords=
#messaging.kafka.consumer.maxPollIntervalMs=
#messaging.kafka.consumer.sessionTimeoutMs=
#messaging.kafka.consumer.heartbeatIntervalMs=
#messaging.kafka.consumer.enableAutoCommit=
#messaging.kafka.consumer.autoCommitIntervalMs=
#messaging.kafka.consumer.partitionAssignmentStrategy=
#messaging.kafka.consumer.autoOffsetReset=
#messaging.kafka.consumer.fetchMinBytes=
#messaging.kafka.consumer.fetchMaxBytes=
#messaging.kafka.consumer.fetchMaxWaitMs=
#messaging.kafka.consumer.maxPartitionFetchBytes=
#messaging.kafka.consumer.checkCrcs=
messaging.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
messaging.kafka.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
#messaging.kafka.consumer.interceptorClasses=
#messaging.kafka.consumer.excludeInternalTopics=
#messaging.kafka.consumer.isolationLevel=
#read_uncommitted

# Kafka listener container properties
messaging.kafka.listener.container.concurrency=1
#messaging.kafka.listener.container.ackMode=
#messaging.kafka.listener.container.ackCount=
#messaging.kafka.listener.container.ackTime=
#messaging.kafka.listener.container.pollTimeout=
#messaging.kafka.listener.container.shutdownTimeout=
#messaging.kafka.listener.container.syncCommits=
#messaging.kafka.listener.container.ackOnError=
#messaging.kafka.listener.container.idleEventInterval=

# Retry back off policy properties
messaging.retry.default.back-off-policy.retryReEnqueueDelay=1000
messaging.retry.default.back-off-policy.retryDelay=600000
messaging.retry.default.back-off-policy.retryDelayMultiplier=1.0
messaging.retry.default.back-off-policy.retryMaxDelay=600000

# default retry policy properties
messaging.retry.default.retry-policy.retryPeriod=1800
messaging.retry.default.retry-policy.retryableExceptions=java.lang.Exception
messaging.retry.default.retry-policy.retryableExceptionsTraverseCauses=true

#Trace properties
spring.application.name=devonKafkaMessaging
