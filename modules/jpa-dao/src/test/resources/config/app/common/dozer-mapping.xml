<?xml version="1.0" encoding="UTF-8"?>
<!--<!DOCTYPE mappings PUBLIC "-//DOZER//DTD MAPPINGS//EN" "https://github.com/DozerMapper/DozerMapper.github.io/blob/master/dtd/bean-mapping.dtd"> -->
<!-- <mappings> -->
<mappings xmlns="http://dozermapper.github.io/schema/bean-mapping"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://dozermapper.github.io/schema/bean-mapping http://dozermapper.github.io/schema/bean-mapping.xsd">
  <configuration>
    <stop-on-errors>true</stop-on-errors>

    <copy-by-references>
      <copy-by-reference>java.lang.Long</copy-by-reference>
      <copy-by-reference>java.lang.Integer</copy-by-reference>
      <copy-by-reference>java.lang.Number</copy-by-reference>
      <copy-by-reference>com.devonfw.module.basic.common.api.reference.IdRef</copy-by-reference>
    </copy-by-references>
  </configuration>

  <!-- If a persistence entity is converted to an ETO then the original entity is stored as hidden reference.
       The modificationCounter of a persistence entity is updated by the JPA provider (hibernate) after the transaction
       has been committed what is after this conversion so the wrong modificationCounter is converted.
       The hidden and transient reference allows to update the modificationCounter to the correct value on
       serialization. -->
  <mapping type="one-way">
    <class-a>com.devonfw.example.general.dataaccess.api.TestApplicationPersistenceEntity</class-a>
    <class-b>com.devonfw.module.basic.common.api.to.AbstractEto</class-b>
    <field custom-converter="com.devonfw.module.beanmapping.common.impl.dozer.IdentityConverter">
      <a>this</a>
      <b is-accessible="true">persistentEntity</b>
    </field>
  </mapping>
</mappings>
