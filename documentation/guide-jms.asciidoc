:toc: macro
toc::[]

= Messaging

ATTENTION: You are on the `develop` branch.
This has been renamed to `master`.
The `develop` branch will not be maintained anymore.
It is only left here to avoid broken links to existing content.
Please update links to point to the `master` branch.
For details look at issue https://github.com/devonfw/devon4j/issues/320[#320].

Messaging in Java is done using the https://en.wikipedia.org/wiki/Java_Message_Service[JMS] standard from JEE.

== Products
For messaging you need to choose a JMS provider such as:

* https://www.rabbitmq.com/[RabbitMQ]
* https://activemq.apache.org/jms[ActiveMQ]
* link:guide-oracle.asciidoc#messaging[Oracle Advanced Queuing] (esp. if you already use link:guide-oracle.asciidoc[Oracle RDBMS])

== Receiver
As a receiver of messages is receiving data from other systems it is located in the link:guide-service-layer.asciidoc[service-layer].

=== JMS Listener
A `JmsListener` is a class listening and consuming JMS messages. It should carry the suffix `JmsListener` and implement the `MessageListener` interface or have its listener method annotated with `@JmsListener`. This is illustrated by the following example:

[source,java]
----
@Named
@Transactional
public class BookingJmsListener /* implements MessageListener */ {

  @Inject
  private Bookingmanagement bookingmanagement;

  @Inject
  private MessageConverter messageConverter;

  @JmsListener(destination = "BOOKING_QUEUE", containerFactory = "jmsListenerContainerFactory")
  public void onMessage(Message message) {
    try {
      BookingTo bookingTo = (BookingTo) this.messageConverter.fromMessage(message);
      this.bookingmanagement.importBooking(bookingTo);
    } catch (MessageConversionException | JMSException e) {
      throw new InvalidMessageException(message);
    }
  }
}
----

== Sender
A sender of messages is communicating with other services and hence is located in the link:guide-logic-layer.asciidoc[logic-layer].
