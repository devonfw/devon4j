# This is the configuration file shipped with the application that contains reasonable defaults.
# Environment specific configurations are configured in config/application.properties.
# If you are running in a servlet container you may add this to lib/config/application.properties in case you do not
# want to touch the WAR file.

# server.port=8080

spring.application.name=${rootArtifactId}
server.servlet.context-path=/

security.expose.error.details=false

spring.jpa.hibernate.ddl-auto=validate

# Datasource for accessing the database
# https://github.com/spring-projects/spring-boot/blob/d3c34ee3d1bfd3db4a98678c524e145ef9bca51c/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java
#if ($dbType == 'mariadb')
spring.jpa.database=mysql
#elseif ($dbType == 'hana')
# Requires spring 5.1 - see https://jira.spring.io/browse/SPR-16460
#spring.jpa.database=hana
spring.jpa.database=default
#else
spring.jpa.database=${dbType}
#end
#if ($dbType == 'h2')
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
#elseif ($dbType == 'hsqldb')
# spring.jpa.database-platform=org.hibernate.dialect.HSQLDialect
# spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver
spring.datasource.username=SA
#elseif ($dbType == 'postgresql')
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
# spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${rootArtifactId}
#elseif ($dbType == 'mysql')
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=${rootArtifactId}
#elseif ($dbType == 'mariadb')
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
# spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=${rootArtifactId}
#elseif ($dbType == 'hana')
# spring.jpa.database-platform=org.hibernate.dialect.HANAColumnStoreDialect
# spring.datasource.driver-class-name=com.sap.db.jdbc.Driver
spring.datasource.username=${rootArtifactId}
#elseif ($dbType == 'oracle')
# spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
# spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=${rootArtifactId}
#else
spring.datasource.username=${rootArtifactId}
#end

# Hibernate NamingStrategy has been deprecated and then removed in favor of two step naming strategy ImplicitNamingStrategy and PhysicalNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# https://github.com/devonfw/devon4j/issues/65
# https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
spring.jpa.open-in-view=false

# to prevent that Spring Boot launches batch jobs on startup
# might otherwise lead to errors if job parameters are needed (or lead to unwanted modifications and longer startup times)
# see http://stackoverflow.com/questions/22318907/how-to-stop-spring-batch-scheduled-jobs-from-running-at-first-time-when-executin
spring.batch.job.enabled=false

# Flyway for Database Setup and Migrations
spring.flyway.locations=classpath:db/migration
