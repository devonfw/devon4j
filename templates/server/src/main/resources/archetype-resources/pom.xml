<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>${artifactId}</artifactId>
  <groupId>${groupId}</groupId>
  <version>${app.version}</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>
  <description>Application based on the devon4j.</description>

  <properties>
    <spring.boot.version>$[spring.boot.version]</spring.boot.version>
    <devon4j.version>$[devon4j.version]</devon4j.version>
    <java.version>1.8</java.version>
    <junit.version>$[junit.version]</junit.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jackson.version>$[jackson.version]</jackson.version> <!-- Overriding Jackson for fixing vulnerabilities -->
    <guava.version>$[guava.version]</guava.version>
    <devonfw.test.excluded.groups>system</devonfw.test.excluded.groups>
    <app.version>${revision}${changelist}</app.version>
    
    <jib.version>$[jib.version]</jib.version>
    <jib.container.image>$[jib.container.image]</jib.container.image>
    <jib.app.port>8081</jib.app.port>
    <jib.goal>dockerBuild</jib.goal>
    
  </properties>

  <modules>
    <module>api</module>
    <module>core</module>
    #if ($earProjectName != '.')
    <module>${earProjectName}</module>
    #end
    #if ($batch == 'batch')
    <module>batch</module>
    #end
    <module>server</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- overriding jackson version from spring-boot by importing BOM before -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- overriding junit version from spring-boot by importing BOM before -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Library with general utilities -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <!-- BOM of spring-boot -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- BOM of devon4j -->
      <dependency>
        <groupId>com.devonfw.java.boms</groupId>
        <artifactId>devon4j-bom</artifactId>
        <version>${devon4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- configure java compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludedGroups>${devonfw.test.excluded.groups}</excludedGroups>
        </configuration>
      </plugin>

      <!-- JaCoCo for test coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>$[maven.resources.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>$[maven.compiler.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>$[maven.install.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>$[maven.deploy.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>$[maven.clean.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>$[maven.jar.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>$[maven.source.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>$[maven.site.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>$[maven.checkstyle.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-changes-plugin</artifactId>
          <version>$[maven.changes.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-changelog-plugin</artifactId>
          <version>$[maven.changelog.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>$[maven.project.info.reports.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>$[maven.jxr.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>$[maven.javadoc.plugin.version]</version>
          <configuration>
            <!-- http://jira.codehaus.org/browse/MJAVADOC-308 -->
            <!--<maxmemory>5048m</maxmemory> -->
            <notree>true</notree>
            <show>protected</show>
            <encoding>${project.reporting.outputEncoding}</encoding>
            <charset>${project.build.sourceEncoding}</charset>
            <docfilessubdirs>true</docfilessubdirs>
            <stylesheetfile>${user.dir}/src/main/javadoc/stylesheet.css</stylesheetfile>
            <doclint>none</doclint>
            <source>${java.version}</source>
            <doctitle>JavaDocs for ${project.name} ${project.version}</doctitle>
            <windowtitle>JavaDocs for ${project.name} ${project.version}</windowtitle>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>$[maven.surefire.plugin.version]</version>
          <configuration>
            <!-- Surefire changed the default to the project.build.directory causing trouble with file paths to test resources -->
            <workingDirectory>${basedir}</workingDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>$[maven.surefire.report.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>$[maven.pmd.plugin.version]</version>
          <configuration>
            <targetJdk>${java.version}</targetJdk>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>$[maven.war.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>$[maven.antrun.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>$[maven.help.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>$[maven.gpg.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>$[maven.archetype.version]</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.archetype</groupId>
          <artifactId>archetype-packaging</artifactId>
          <version>$[maven.archetype.version]</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>taglist-maven-plugin</artifactId>
          <version>$[mojo.taglist.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>$[mojo.cobertura.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>$[mojo.flatten.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>$[mojo.license.plugin.version]</version>
          <configuration>
            <outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
            <sortArtifactByName>true</sortArtifactByName>
            <includeTransitiveDependencies>true</includeTransitiveDependencies>
            <useMissingFile>true</useMissingFile>
            <failOnMissing>true</failOnMissing>
            <licenseMerges>
              <licenseMerge>Apache Software License, Version 2.0|The Apache Software License, Version 2.0|Apache
                2.0|Apache License, Version 2.0</licenseMerge>
            </licenseMerges>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>servicedocgen-maven-plugin</artifactId>
          <version>$[mojo.servicedocgen.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>$[sonar.maven.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>$[jacoco.maven.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>$[owasp.dependency.check.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>$[spotbugs.plugin.version]</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
        </plugin>
         <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib.version}</version>
          <configuration>
            <from>
              <image>${jib.container.image}</image>
            </from>
            <to>
              <image>${project.name}/java:${project.version}</image>
            </to>
            <container>
              <mainClass>${package}.SpringBootApp</mainClass>
              <ports>
                <port>${jib.app.port}</port>
              </ports>
              <format>OCI</format>
            </container>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
   <profile>
      <id>release</id>
      <properties>
        <jib.goal>build</jib.goal>
      </properties>
    </profile>
    <profile>
      <id>moduletest</id>
      <properties>
        <devonfw.test.excluded.groups>component,subsystem,system</devonfw.test.excluded.groups>
      </properties>
    </profile>
    <profile>
      <id>componenttest</id>
      <properties>
        <devonfw.test.excluded.groups>subsystem,system</devonfw.test.excluded.groups>
      </properties>
    </profile>
    <profile>
      <id>subsystemtest</id>
      <properties>
        <devonfw.test.excluded.groups>system</devonfw.test.excluded.groups>
      </properties>
    </profile>
    <profile>
      <id>systemtest</id>
      <properties>
        <devonfw.test.excluded.groups>none</devonfw.test.excluded.groups>
      </properties>
    </profile>
    <profile>
      <id>security</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <configuration>
              <failBuildOnCVSS>8</failBuildOnCVSS>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>licenses</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>aggregate-add-third-party</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>aggregate-add-third-party</goal>
                </goals>
              </execution>

              <execution>
                <id>aggregate-download-licenses</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>aggregate-download-licenses</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- separate eclipse build from command-line... -->
      <id>eclipse</id>
      <activation>
        <property>
          <name>eclipse.application</name>
        </property>
      </activation>
      <build>
        <directory>eclipse-target</directory>
      </build>
    </profile>
  </profiles>

  #if ($dbType == 'oracle')
  <repositories>
    <repository>
      <id>maven.oracle.com</id>
      <name>oracle-maven-repo</name>
      <url>https://maven.oracle.com</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>maven.oracle.com</id>
      <name>oracle-maven-repo</name>
      <url>https://maven.oracle.com</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  #end
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <configuration>
          <tags>
            <tag>TODO</tag>
            <tag>@todo</tag>
            <tag>FIXME</tag>
            <tag>@deprecated</tag>
            <tag>REVIEW</tag>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>aggregate</report>
              <report>check</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>servicedocgen-maven-plugin</artifactId>
        <configuration>
          <descriptor>
            <info>
              <title>${servicedoc.info.title}</title>
              <description>${servicedoc.info.description}</description>
            </info>
            <host>${servicedoc.host}</host>
            <port>${servicedoc.port}</port>
            <basePath>${servicedoc.basePath}</basePath>
            <schemes>
              <scheme>http</scheme>
            </schemes>
          </descriptor>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>third-party-report</report>
              <report>aggregate-third-party-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
