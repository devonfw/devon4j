# This is a basic workflow to help you get started with Actions

name: github actions for devon4j
env:
  ORG: "devonfw"
  REPO_SOURCE: "devon4j"
  REPO_DEST: "devon4j.wiki"
  REPO_CONSOLIDATE: "devonfw-guide"
  GH_REPO_SOURCE: "github.com/${ORG}/${REPO_SOURCE}.git"
  GH_REPO_DEST:  "github.com/${ORG}/${REPO_DEST}.git"
  GH_REPO_CONSOLIDATE: "github.com/${ORG}/${REPO_CONSOLIDATE}.git" 

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "include"
  include:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository 
      - uses: actions/checkout@v2
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'
            
      - name: Build
        run: |
          mvn install && ([[ $TRAVIS_BRANCH != "develop" ]] || [[ $TRAVIS_PULL_REQUEST != "false" ]] || mvn --settings .mvn/settings.xml -DskipTests=true -Darchetype.test.skip=true deploy)
          
      - name: Documentation
        run: |
          cd ..
          git clone https://${GH_REPO_DEST}
          git clone https://${GH_REPO_CONSOLIDATE}
          yes | cp -rf ${REPO_SOURCE}/documentation/* ${REPO_DEST}/
          cd ${REPO_DEST}
          grep -lr "link:[a-zA-Z0-9_.-]*.asciidoc.*" .| xargs -r sed -i "s/.asciidoc//g"
          |
          if git diff-index --quiet HEAD && [ ! -n "$(git status -s)" ]; then 
            set +e 
            pkill -9 -P $$ &> /dev/null || true 
            exit 0
          else 
            git config user.email ${EMAIL}
            git config user.name ${USER}
            git status
            git add .
            git commit -m "${REPO_SOURCE} documentation | Travis CI build number $TRAVIS_BUILD_NUMBER"
            git remote add origin-wiki "https://${USER}:${GITHUB_TOKEN}@${GH_REPO_DEST}"
            git push origin-wiki master
            cd ../${REPO_CONSOLIDATE}
            if [ ! -d ${REPO_DEST} ]; then git submodule add https://${GH_REPO_DEST}; fi;
            git submodule init
            git submodule update --recursive --remote
            cd ${REPO_DEST}
            git checkout master
            git pull
            cd ..
            git add .
            git commit -m "${REPO_SOURCE} documentation | Travis CI build number $TRAVIS_BUILD_NUMBER"
            git remote add origin-wiki "https://${USER}:${GITHUB_TOKEN}@${GH_REPO_CONSOLIDATE}"
            git push origin-wiki master
          fi
